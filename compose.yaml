version: "3"

services:
  manager:
    build:
      context: Manager
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - nginx
      - mongodb1
    environment:
      - WORKERS_AMOUNT
      - PROXY_URL
  worker:
    build:
      context: Worker
      dockerfile: ./Dockerfile
    scale: ${WORKERS_AMOUNT}
    environment:
      - MANAGER_URL
    expose:
      - "8002"
  mongodb1:
    image: mongo:4
    restart: always
    container_name: mongodb1
    logging:
      driver: none
    volumes:
      - mongodata1:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]
  mongodb2:
    image: mongo:4
    restart: always
    container_name: mongodb2
    logging:
      driver: none
    volumes:
      - mongodata2:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]
  mongodb3:
    image: mongo:4
    restart: always
    container_name: mongodb3
    logging:
      driver: none
    volumes:
      - mongodata3:/data/db
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]    
  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
      - mongodb1
    volumes:
      - mongostatus:/data/
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8001:8001"
    expose:
      - "8001"
    depends_on:
      - worker
  
volumes:
  mongodata1:
  mongodata2:
  mongodata3:
  mongostatus: